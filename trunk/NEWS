-*-outline-*-

		      NEWS for Python X Library

		      		      
* Version 0.7  6 Jan 2001

** Fixed the 64-bit platform fix.

As it turns out, the attempted fix for 64-bit platforms in v0.6 didn't
really work.  Close study of structmodules.c gave the answer why, and
now it really should work.  Yeah.

** Optimizations of core protocol engine

Python Xlib is now at least 25% faster after the core of the protocol
engine has been rewritten.  This is some quite cute code: tailor-made
methods are generated for all structures, resulting in a 650% speed-up
in generating binary data, and a 75% speed-up in parsing binary data.

Interested Python hackers are recommended to take a look at the Struct
class in Xlib/protocol/rq.py.



* Version 0.6  29 Dec 2000

** Fix to make python-xlib work on 64-bytes architectures.

The struct and array modules uses sizeof(long) to determine the number
of bytes used when representing the type code 'l'.  On Intel and VAX,
this is 32 bits as expected.  On Alpha, it's 64 bits.  python-xlib now
probes how large each type code is to avoid this problem.


* Version 0.5  28 Dec 2000

** Functions implemented to get and set all ICCCM WM properties on
Window objects.

** Keymap cache implemented, with external Xlib.display.Display
methods keycode_to_keysym, keysym_to_keycode, keysym_to_keycodes and
refresh_keyboard_mapping.

** Two utils for debugging X traffic implemented.
utils/tcpbug.py forwards a TCP connection and outputs the
communication between the client and the server.  This output can then
be fed into utils/parsexbug.py, which will output all requests,
responses, errors and events in a readable format.


* Version 0.4  4 Oct 2000

** Thread support completed, but not really stresstested yet.

** A framework for handling different platforms has been implemented,
together with generic Unix code and some simple VMS code.

** Some documentation has been written.

** The usual bunch of bugfixes.



